兼容性问题:
	1)IE6,不支持小于12px字号的盒子(微型盒子),解决方法是 减小字体的大小(_font-size:0px)
	 IE6浏览器的hack:
		带_的属性(如:_background-color )只有IE6认识,所有属性都可加_,单独给IE6定义属性时可使用
	2)IE6不支持overflow:hidden;
		解决方法:使用zoom:1属性(放大属性)
	   div{
			overflow:hidden;
			zoom:1;
	    }
	
	伴生属性:
		单独属性在IE6中不起作用,两个一起才起作用,使用时出现相同问题要敏感,一块使用。
	3)双倍margin
	4)3px bug
	
------------------------------------------------------------------------------------------------------
margin:
    1)margin的塌陷:
		标准流中盒子垂直相邻的外边距会合并,此为塌陷现象,外边距以大的为准,相邻左右外边距不会出现塌陷现象
		行内元素的的左右外边距不会合并。浮动元素的外边距也不会合并。允许指定负的外边距值，
	2)盒子居中:
		margin:0 auto; auto(尽可能的增加,margin-left:auto;会使盒子左对齐)
		1)使用margin:0 auto;的盒子必须有明确的width
		2)只有标准流的盒子才可以使用
		3)只能使盒子居中,盒子中的文本并不会居中
	3)标准文档流中的父子盒子嵌套中,能用padding产生上下边距的就不用margin,
	  因为未脱离标准流的儿子盒子使用margin产生上下边距时,若儿子没有兄弟,则此时父子上边距重合相遇,产生margin塌陷,	
	  
	  margin这个属性,本质上描述的是兄弟和兄弟之间的距离,父子之前尽量不用,父子之间的距离用父亲的padding,
	  .div1 {
			width:80px;
			height:80px;
			background-color:red;
		}
		.div2{
			width:40px;
			height:40px;
			background-color:blue;
			margin-top:20px;
		}
		
		
		<p>1111111111111111111</p>
		<div>
			<p>22222222222222222222</p>
			<div class="div1">             无边框的父亲盒子
				<div class="div2"></div>   儿子盒子
			</div>
		</div>
-----------------------------------------------------------------------------------------------------
行高:
	line-height
	盒模型的padding不是作用在字上,而是作用在行上。文字在行高中是上下居中的。当行高等于盒模型的高度时,文字就会垂直居中
	行高和字号都要是偶数。
		font:14px/24px "宋体";	
		相当于
		font-size:14px;
		line-height:24px;
		font-family:"宋体";
--------------------------------------------------------------------------------------------
字体:
	font-family:"",""; 逗号后边的是备选字体,无前者字体时使用备选字体显示
	不是所有的字体都可以做网页,需要客户的电脑中包含这种字体,否则就会变成宋体
	页面中,我们只是用 微软雅黑、宋体、黑体。使用其他字体时要使用切图(字体的图片)
	注意:
		页面中的设置英文字体时要写在最前边,
		font-family:"Arial","微软雅黑","宋体"
					英文字体,中文字体, 中文备选字体
	font:14px/28px "Arial","微软雅黑","宋体";
	还可以写成:	
	font-family:14px/200% "Arial","微软雅黑","宋体";
---------------------------------------------------------------------------------------------
background:
	backgroun-color:;背景颜色
		1)英文单词描述
			red,blue...
		2)rgb三原色表示
			background-color:rgb(0,0,255);
		3)16进制表示
			backgroun-color:#FF0000;
	------------------------------------------------------------------------------------
	background-image:url();背景图片
		1)url()表示网址,
		  background-image:url(image/../..jpg); 默认背景图片平铺满
		2)padding区域有背景图
	------------------------------------------------------------------------------------------------
	background-repeat:;背景重复
		1)background-repeat:no-repeat;
			背景不重复只有一张
		2)backgroud-repeat:repeat-x;
			背景横向重复
		3)backgroun-repeat:repeat-y;
			背景横向重复
	background-position:;背景定位
	当背景图片过大时使用background-position:center top;
		1)单词描述
	   	  background-position:center;    居中
			  background-position:center top;  中上部
			  相当于
			  background-position-x:center;
			  background-position-y: top;
		2)像素描述
			background-position:10px 10px; 
			相当于
			background-position-x:10px;       水平定位10px
			background-position-y: 10px;	  竖直定位10px
	-----------------------------------------------------------------------------------------------------
	background-attachment:fixed; 固定背景图片,不会跟着滚动条滚动
	-------------------------------------------------------------------------------------------------------------
	background:;综合
	 background:....; 值的顺序无所谓
	 background:url() red no-repeat;
	 background:red url() no-repeat;
-------------------------------------------------------------------------------------------------------------------------
css精灵:
	将某些图片整合到一张图片上,然后根据 -image、-position、-repeat、width、height、
	例:
	图片: bg_sprite.png
	---	
   | 1 |	每一个小图片 width:16px; height:16px;
	---
	---
   | 2 |
	---
	---
   | 3 |
	---
	---
   | 4 |
	---
	---
   | 5 |
	---
   代码:
   #ico {width: 16px;height:16px;background: url("bg_sprite.png") no-repeat 0 -234px;}

									-1 -2 ...
	使用css精灵时,背景定位一般都  0 ---------------------------------->  负px
                                  | -1  
                                  | -2
                                  |  .
                                  |  .
                                  |  .
                                  |
	                              |
								  ↓
								  负px