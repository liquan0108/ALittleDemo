提高搜索引擎权重:
	一些标志性的logo变成背景,并在盒子中定义内容关键字,然后将关键字挤走隐藏,就不再用image,
	隐藏关键字的方法:
	1.text-indent:-9999px;
	    只适用于块级元素block
	2.“隐藏”掉你background之上的字体
		line-height:0;
		font-size:0;
		overflow:hidden;
	3.最方便的是加个span，然后display:none，
------------------------------------------------------------------------------------------------------------------	
相对定位:
	position:relative; 
	1)相对于原来的位置,进行定位,用来微调。
		例:
			position:relative;   → 声明要移动了,
			left:1px;			 → 然后进行调整:距离左边1像素
			top:1px;			 → 然后进行调整:距离顶部1像素
		相对于原来的位置,向右下角移动 
	2)不脱标,老家留坑,形影分离
	3)相对定位的用途
		a.微调元素
		b.绝对定位的参考,子绝父相
-----------------------------------------------------------------------------------------------------------------------------
绝对定位:
	position:absolut;
	top/bottom:;
	left/right:;
	1)脱标
	  绝对定位的盒子是脱离标准文档流的。所以,绝对定位后就不在区分行内元素、块级元素了,
	  此时不需要转换成块级元素(display:block;)就可以设置宽高(width、height)了
	------------------------------------------------------------------------------------------------------
	2)参考点
		a)由top属性设置的参照点为页面的左上角
		b)由bottom属性设置的参考点为首屏页面左下角
		
		c)子绝父相(父亲的位置不会释放)
			儿子绝对定位,父亲相对定位,此时,儿子的定位相对于父亲。
			若儿子的父亲、爷爷都有相对定位,则儿子听父亲的。
			若父亲无相对定位,爷爷有相对定位,则此时儿子的定位相对于爷爷。
			
		d)子绝父绝(会释放父亲的位置,叔叔会占据父亲的位置)
			于上方效果相同,但是都脱标了无意义,
		注:
		   绝对定位的儿子,无视父亲的padding。
	       一个盒子不可能同时是浮动和绝对定位,因为浮动要贴边,而绝对定位又固定位置,会没有贴边效果 (绝对定位会使浮动失效)
		   但不能同时是浮动和相对定位,因为盒子不能即使脱标了,又是未脱标,
    ------------------------------------------------------------------------------------------------------------
	绝对定位的盒子居中:
		position:absolut;
		left:50%;
		margin-left:-..px; 再往左走盒子宽度的一半
	------------------------------------------------------------------------------------------------------------
	案例:
		input框下的推荐内容,
			1.都绝对定位
			2.input的层级高于 div
			3.input的背景设为透明
				background-color: transparent;
				或者
				background-color: rgba(0, 0, 0, 0);
		input框右边的小相机
			1.都绝对定位
			2.包含小相机盒子的层级高于input
	
-------------------------------------------------------------------------------------------------------------
固定定位:
	position:fixed;
	
    1)脱标
	2)参考点:
		以浏览器为参考点;
---------------------------------------------------------------------------------------------------------------------
z-index (设置层级)
		1)z-index 值表示谁压着谁,数值大的压着数值小的
		2)只有定位(相对定位,绝对定位,固定定位)了的元素才可以使用z-index值,浮动不可以使用
		3)z-index没有单位,就是一个正整数,默认为0
		4)如果z-index值相同,那么谁写在html之后,谁在上边
		5)从父现象
			若父亲的z-index大于他人父亲的z-index值,那么儿子会覆盖他人儿子,无论他人儿子的z-index值有多大。
			(父亲怂了,儿子在牛也没用)
-------------------------------------------------------------------------------------------------------------------------
注:
	后定位的会压盖先定位的,
	
	
-------------------------------------------------------------------------------------------------------------------------
css 
	行内式:  style="..."
	
	内嵌式: <style>
				
			</style>
	
	外链式:   <link  href="...."  
	
-------------------------------------------------------------------------------------------------------------------------
拓展:
	浮动:
		float: none;     none left right
		
		position:static;  relative absolut fixed
	-------------------------------------------------------------------------------------------------------------------------
	对元素同时使用position和float的情况:
　　　　经过实践发现，无论position和float谁写在前面或后面，都是position先起作用。

　　　　　　1.当position为absolute/fixed时，元素已脱离文档流，再对元素应用float失效（即不起作用）。

　　　　　　2.当position为static/relative时，元素依旧处于普通流中，再对元素应用float起作用。\
	-------------------------------------------------------------------------------------------------------------------------
	
	css定位机制之绝对定位机制与浮动定位机制的区别

　　　　1.用position使元素脱离普通流后，该元素不占据空间，用top/bottom/left/right决定位置。

　　　　2.用float使元素脱离普通流后，该元素占据空间，用margin,padding等决定和周围内容的距离等。
	-------------------------------------------------------------------------------------------------------------------------
	position:relative和负margin都可以使元素位置发生偏移?二者有什么区别？
		负margin会使元素在文档流中的位置发生偏移，它会放弃偏移之前占据的空间，紧挨其后的元素会填充这部分空间；
		相对定位后元素位置发生偏移，它仍会坚守原来占据的空间，不会让文档流的其他元素流入。
		
		
	-------------------------------------------------------------------------------------------------------------------------

	浮动、绝对定位、inline-block 后盒子大小默认为内容大小