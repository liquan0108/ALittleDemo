CSRF
	。基本概念和缩写
		CSRF，通常称为跨站请求伪造，英文名Cross-site request forgery缩写CSRF
	。攻击原理
		步骤一
			用户登录、浏览并信任正规网站WebA，同时，WebA通过用户的验证并在用户的浏览器中产生Cookie。
		步骤二
			攻击者WebB通过在WebA中添加图片链接等方式诱导用户User访问网站WebB。
		步骤三
			在用户User被诱导访问WebB后，WebB会利用用户User的浏览器访问第三方网站WebA，并发出操作请求。
		步骤四
			用户User的浏览器根据WebB的要求，带着步骤一中产生的Cookie访问WebA。
		步骤五
			网站WebA接收到用户浏览器的请求，WebA无法分辨请求由何处发出，由于浏览器访问时带上用户的Cookie，因此WebA会响应浏览器的请求，如此一来，攻击网站WebB就达到了模拟用户操作的目的。
	。防御措施
		。Token验证
			可以在 HTTP 请求中以参数的形式加入一个随机产生的 token，并在服务器端建立一个拦截器来验证这个 token，
			如果请求中没有 token 或者 token 内容不正确，则认为可能是 CSRF 攻击而拒绝该请求。这种方法要比检查 Referer 要安全一些，
			token 可以在用户登陆后产生并放于 session 之中，然后在每次请求时把 token 从 session 中拿出，与请求中的 token 进行比对。
		。Referer验证
			页面来源验证，
			根据 HTTP 协议，在 HTTP 头中有一个字段叫 Referer，它记录了该 HTTP 请求的来源地址。在通常情况下，访问一个安全受限页面的请求来自于同一个网站，
			比如上文中用户User想要在网站WebA中进行转账操作，那么用户User必须先登录WabA然后再通过点击页面上的按钮出发转账事件，
			这时该转帐请求的 Referer 值就会是转账按钮所在的页面的URL，而如果黑客要对银行网站实施 CSRF攻击，他只能在他自己的网站构造请求，
			当用户User通过黑客的网站发送请求到WebA时，该请求的 Referer 是指向黑客自己的网站。因此，要防御 CSRF 攻击，
			网站WebA只需要对于每一个转账请求验证其 Referer 值，如果是以网站WebA的网址开头的域名，则说明该请求是来自WebA自己的请求，是合法的。
			如果 Referer 是其他网站的话，则有可能是黑客的 CSRF 攻击，拒绝该请求。
		。隐藏令牌

		 。只使用JSON API
		    使用JavaScript发起AJAX请求是限制跨域的，并不能通过简单的 表单来发送JSON，所以，通过只接收JSON可以很大可能避免CSRF攻击。
	
XSS
	基本概念和缩写
		XSS (cross-site scripting跨域脚本攻击)
	它是通过对网页注入可执行代码且成功地被浏览器 执行，达到攻击的目的。
	XSS攻击类型：
		第一、XSS反射型攻击，恶意代码并没有保存在目标网站，通过引诱用户点击一个链接到目标网站的恶意链接来实施攻击的。
		第二、XSS存储型攻击，恶意代码被保存到目标网站的服务器中，这种攻击具有较强的稳定性和持久性，比较常见场景是在博客，论坛等社交网站上，
		
	。防御措施
			一、方法是在表单提交或者url参数传递前，对需要的参数进行过滤,请看如下XSS过滤工具类代码。
			二、过滤用户输入的 检查用户输入的内容中是否有非法内容。
				如<>（尖括号）、”（引号）、 ‘（单引号）、%（百分比符号）、;（分号）、()（括号）、&（& 符号）、+（加号）等。
		