数组常用方法

	1.Array.from（）方法从一个类似数组或可迭代对象创建一个新的，浅拷贝的数组实例。
		console.log(Array.from('foo'));
		 // expected output: Array ["f", "o", "o"]
		
	2. arry.reverse() 方法 翻转数组。
		console.log([1,2,3].reverse());
		// expected output: [3,2,1]
		
	3. arry.join(连接符)方法把数组各项以连接符连接成string。 连接符可以为空。
		console.log([1,2,3].join(''));
		//expected output: '123'
		
		创建数组
			Array构造器 var array = new Array();
			数组字面量 var arr = [1,2,3];
		检测数组
			instanceof:   value instanceof Array 确定某个对象是不是数组
			Array.isArray()确定某个值是不是数组
		转换
			toString : 返回逗号分隔的字符串
			valueOf 返回的还是数组
			toLocaleString() 数组转换为本地字符串
			join()join() 方法用于把数组中的所有元素放入一个字符串。arrayObject.join(separator) 指定使用的分隔符号,若省略则使用的是逗号
		栈方法(后进先出)
			push() 方法可向数组的末尾添加一个或多个元素，并返回新的长度
			pop() 移除数组末尾项,并返回该项
			队列方法(先进先出)
			shift() 移除数组首项,并返回该项
			unshift()在数组前端添加项,并返回新数组长度
		重排序
			reverse() :反转
			sort() 按升序排列数组
		操作方法
			concat() 基于当前数组的所有项创建一个新数组;通俗:接到什么参数就全部推进去
			slice() : 基于当前数组创建一个新数组,(就是截取数组一部分拿出来做新数组);
				参数:返回项的起始位置和结束位置(不返回结束位置的项)
			splice():向数组中部插入项,印象概念股
				始终返回一个数组,包含从原始数组中删除的项,(没有删除则返回空数组)
				删除---两个参数: 要删除的第一项的位置+要删除的个数
				插入--三个参数:起始位置,0,要插入的项
				替换--三个参数:起始位置,要删除的项数,要插入的项
		位置方法
			indexOf() 从数组前面开始找 ---可以接收两个参数: 要查找的项+查找起点位置
			lastindexof 从数组后面开始找-(最后出现的位置)---lastIndexOf(searchvalue,fromindex)
		迭代方法
		every/filter/map/some
		forEach(ps,此方法只能遍历数组,可以直接得到value)
		