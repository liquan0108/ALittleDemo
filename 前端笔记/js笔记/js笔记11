动画的基本原理:
	跟人走路一样,到了某个位置后,在加一定的步长,
----------------------------------------------------------------------------------------------
自动和焦点结合的匀速轮播图:(每次移动的距离一样所以是匀速)

	注意鼠标悬浮时要停止所有使图片滚动的定时器!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!1

	焦点部分的定时器
	  定时器(
		步长 = 当前left的位置 > 要去的终点的位置 ? - 步长 : 步长
		
		如果(当前left的位置 == 要去的终点的位置 ){
			关闭定时器
		} else {
			.style.left = 当前left的位置 + 步长
		}
	,20)
	--------------------------------------------------------------------
	自动部分的定时器:
		外层的负责停顿,内层的负责移动,
	!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	注意:
		切换标签页回来时,轮播图一直快速不停滚动原因:
			在切换标签页时，前一个标签页虽然失去焦点，但函数一直在运行。返回原来的页面时，定时器快d的进行重绘页面。
			解决办法:
			    window.onblur = function(){
					关闭计时器
			}
			 window.onfocus = function(){
					打开计时器：
			}

-------------------------------------------------------------------------------------------------------------------------------
一、js取整
	1. 丢弃小数部分,保留整数部分
	parseInt(3.5)　　// 3

	2. 向上取整(大于它的&相邻的整数),有小数就丢弃小数部分,然后整数部分加1
	Math.ceil(3.5)　　// 4
	Math.ceil(-3.5)   // 3

	3. 向下取整(小于它的&相邻的整数),丢弃小数部分
	Math.floor(3.5)　　// 3
	Math.floor(-3.5)  // -4
	
	4. 正数四舍五入
	Math.round(3.5)　　// 4
	Math.round(3.4)　　// 3
	5. 负数五舍六入
	Math.round(-3.5)　　// -3
	Math.round(-3.6)　　// -4
----------------------------------------------------------------------------------------------------------------------------------------
访问css属性的两种方式:
	一、获得行内样式
		1. . 方法
			style.width、style.height、style.top
			. 之后为死值,封装左右滑动动画后,想要适应上下滑动,需动代码
		2.	[]方法
			
			style["属性名"];
		!!!!!!!!!!!!!	[]中可传入变量,可根据传入变量的不同来获取不同的css属性
	二、获得当前所有样式(只读,得到string类型)
		ie:
			obj.currentStyle.样式   /      obj.currentStyle["样式"]  
		其他(w3c):
			computed(翻译为 计算)
			window.getComputedStyle("元素","伪类"); 没有伪类写为 null
			window.getComputedStyle(obj,null).样式     / window.getComputedStyle(obj,null)["样式"]
			
		封装:
			function getStyle(obj,属性名){
				if(obj.currentStyle){
				
					  return	obj.currentStyle[属性名]		
				}else {
						return	obj.getComputedStyle(obj,null)[属性名]
				}		
			}
		注:
			获得的宽高等都是带像素的  "50px"
			可用parseInt("50px") = > 50
		-----------------------------------------------------------------------------------------------------------------------------------------
		案例:
			封装运动框架

---------------------------------------------------------------------------------------------------------------------------------------------------------
回调函数:
	前边函数执行完毕后,再执行的函数
	--------------------------------------------------------------------------------------------------------------
	案例:
		仿360开机弹窗
			
			donghua(obj,attr,target,fn){
				...
				if(当前位置/大小 == 目标位置/大小){
						停止定时器
						if(fn){    //判断有无回调函数
							fn();   //执行回调函数
						}
				}
			}

			donghua(box,"bottom",-100,
			()=>{ donghua(box,"right",-100) }                 //回调函数传参时,放入箭头函数中,防止自动触发
			)
			
	------------------------------------------------------------------------------------------------------------------
in 运算符:
	如果指定的属性在指定的对象或其原型链中，则in 运算符返回true。
		prop in object
		
		一个字符串类型或者 symbol 类型的属性名或者数组索引
		
		in右操作数必须是一个对象值

--------------------------------------------------------------------------------------------------------------------------------------------------------------
	1、filter：对win IE设置半透明滤镜效果，
		filter:alpha(Opacity=80);  代表该对象80%半透明，火狐浏览器不认
		
	2、-moz-opacity：对mozilla firefox火狐浏览器实现半透明，win IE不认此属性，
		-moz-opacity:0.5;  相当于设置半透明为50%
		
	3、opacity：对除IE外所有浏览器支持包括谷歌，放最后主要针对谷歌浏览器，
		opacity: 0.5;表示设置50%半透明


