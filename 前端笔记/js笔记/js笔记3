数组:
	声明:
		var a = [1,2,,3];
		var b = new Array(1,2,3);
	------------------------------------------
	使用:
		数组名[下标]
		a[0] => 1
		a[1] => 2	
		b[0] => 1
		b[1] => 2
	------------------------------------------
	遍历数组:
		for( var i = 0; i< a.length; i++){    每次比较 都要先通过.length 拿到长度,但是数组不删除/添加元素时是不会变得,反复获取length影响性能
				a[i]
		}
		--------------------------------------
		for( var i = 0, len = textArr.length; i<len; i++ )
	-----------------------------------------------------------------------------------------------
	数组常用方法:
	1.push(内容)     =>     返回数组长度
		向数组末尾追加内容
			arr.push(....)
	2.unshift(内容) 
		从数组头追加内容
			arr.unshift(...)
	3.pop()              =>返回删除的元素
		删除数组中最后一个元素
			srr.pop()
	4.shift()
		删除数组中第一个元素
			arr.shift()
	5.concat()
		连接两个数组
			arr1.concat(arr2)
  **6.join(内容)
		把数组的各个元素,用内容连接成字符串
			var arr = [a,b,c,d]
			arr.join("-")	=> "a-b-c-d"
  **7.split(内容)	
		把字符串中的内容切割,是字符串形成数组
			var str = "a-b-c-d";
			str.split("-")  => ["a","b","c"]
	-----------------------------------------------------------------------------------------------	
	数组中存入对象的格式:
	
	 var contents = {
			  datas: [                             
				{ con: "111111111111111", score: 9 },                          contents.datas[0].score =>9
				{ con: "222222222222222", score: 4 },
				{ con: "333333333333333", score: 6 },
				{ con: "444444444444444", score: 1 },
			  ],
			};	
---------------------------------------------------------------------------------------------------
三目元算符:
		a? b :c
			a为真,则运行b代码块,否则运行c代码块
---------------------------------------------------------------------------------------------------
排他思想:
		1.清除所有人
		2.把自己在拉回来
		------------------------------------------------------------------------------------------
		案例:
			核心:
				双重for循环,先内层清除所有颜色,在外层最后绑定颜色,
				焦点轮播图的焦点颜色(悬浮时都清空,然后再给自己加上颜色)
			
---------------------------------------------------------------------------------------------------
循环: 
		for(let i= 0 ; i<arr.length ; i++){
			语句...
		}
		while(条件) {  为真时执行语句
			语句...
		}
		do{       先执行一次语句,在判断,为真时,再次执行
			语句...
		}while(条件)
---------------------------------------------------------------------------------------------------	

---------------------------------------------------------------------------------------------------	
	补充:
		select对象.selectedIndex   获得所选 选项的index下标,注意 是选中后才能拿到下标
		option对象.value           获得option的value值    <option value ="spring">春天</option>
		option对象.text            获得option的文本内容       <option value ="spring">春天(文本内容)</option>   
		
	
	