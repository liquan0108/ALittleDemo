  react开发环境的搭建
	在HTML中使用React：
		需要引入一下三个js文件（引入前要安装）
		1. react.js 核心文件
		2. react-dom.js 渲染页面中的DOM  当前文件依赖于react核心文件
		3. babel.js ES6转换成ES5 JSX语法转换成javascript 现今浏览器进行代码的兼容
	脚手架搭建项目：
		npm install -g create-react-app /*搭建一个全局的脚手架*/
		create-react-app my-demo /*创建项目 my-demo是项目名字*/
		cd my-demo /*进入目录 然后启动*/
		npm start
		执行完毕即可快速创建React开发环境
		可以在http://localhost:3000/ 查看项目
		

----------------------------------------------------------------------------------
JSX语法的基本使用
	<script type = 'text/babel'>	type类型不能少
		class 组件 extends React.Component {
			render() {
				return( 
				<>
					<h1></h1>
					<p></p>
					...
				 </>
					);
			}
	}
	//把组件渲染到目标元素
		ReactDOM.render(组件，目标元素，渲染完成时执行的回调函数);	
	</script>
注意：
	1.JSX表达式必须有一个父元素，若不显示父元素则使用<>/ <Fragment> 标签。	
	2.ReactDOM.render()只渲染一次，可封装在函数中实现手动调用时渲染，
		function render() {
			ReactDOM.render(组件，目标元素，渲染完成时执行的回调函数);
      }
	3.return返回多行时要包含在括号中。若本行的return后无内容，则js解析器会补上 ; 即 return;
----------------------------------------------------------------------------------------
JSX语法的高阶使用：
	变量的使用：(花括号引起来即可拿到变量)
		let name = '小样板'；
		let age = '25岁';
	
		<div>
			姓名是:{name}，年龄是:{age}
		</div>
	---------------------------------------------------------------------------------------
	函数的使用：(同样需要花括号引起来)
		1.直接在标签中使用
		声明：
		function sum(obj) {
				return <div>姓名是:{obj.name}，年龄是:{obj.age}</div>
				
				--------------------------------------------------------
				模板字符串
					不用再使用 + 号连接字符和插入变量
				return `my name is :${name}`
		}
		使用：
		<div>
			{sum(obj)}
		</div>
		2.事件绑定的处理函数(注意要使用this.sum拿到JSX中的函数,JSX中的事件名称使用驼峰命名法)
		
		<div onClick={this.sum}>点击</div>
	-------------------------------------------------------------------------------------------	
	属性的使用：各样式之间用逗号隔开
		变量式：
			let style-div = {color:'red',fontSize:'14px'}
			<div style={style-div}></div>
		内嵌式：
			<div style= {{color:'red',fontSize:'14px' }}></div>	
	---------------------------------------------------------------------------------------------	
	遍历数组：
		map((item,index) => {
			...
		})
		