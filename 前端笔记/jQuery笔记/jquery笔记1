复习js:
	1.window.onload = function(){  // 一个html文件中只能有一个 window.onload
			...
	} 

	2.浏览器兼容问题
	3.繁琐,代码量多
	4.代码容错性差
	5.动画效果,实现起来繁琐,较难
------------------------------------------------------------------------------------------------------------------------------------
jquery就是js库，里边封装了常用的功能，方便使用；

js库：把js常用的功能代码封装风一个文件，使用的时候直接引入即可。

写得少，做得多，
----------------------------------------------------------------------------------------------------
jquery使用:
	1.引入(先引入,在使用)
		<script src = "jQuery路径"></script>
		jQuery.js    带有注释和空格的，方便阅读源码
		jQuery.min.js    有min的jQuery为压缩过的,压缩后功能与未压缩的完全一样，只是文件更小,它将其中的空白字符、注释、空行等与逻辑无关的内容删除，并进行一些优化。生产环境中使用
	注:
	  jQuery 2.2.xxx 版本 	 不再支持IE6、7、8

	2.入口函数
	
		方式一
			$(document).ready(function(){
				...
			})

		方式二
			$(function(){
				...
			})

	3.事件处理函数
		
		获得事件源
			$('#id') 相当于  document.getElementById("id");

		事件
		 
		绑定事件处理函数
			jQuery对象的事件是不带 on 的。
			.click(fn)      相当于   .onclick(名称)
-----------------------------------------------------------------------------------------------------------------------------------------------------
js入口函数跟jQuery入口函数的区别：
		Js的window.onload事件是等到所有内容，以及我们的外部图片之类的文件加载完了之后，才回去执行
		jQuery的入口函数 是在 html所有标签都加载之后，就回去执行。			

--------------------------------------------------------------------------------------------------------------------------------------------
js中定义函数的四种方式，算是最全的写法了
	一:普通函数
		函数表达式
			格式为 let a = function(){}

		函数声明
			格式为 function a(){}

		匿名函数
			格式为 function(){}

	二:箭头函数
		箭头函数，有许多种写法。都是感觉参数和函数体不同，自由的去掉小括号和大括号。
		箭头函数中，不需要写function。

	三:对象中的函数
			var obj = {
				a:function(){}      //key : value  形式   ,注意：json中的key必须被引号引起来
			}
------------------------------------------------------------------------------------------------------------------------------------------------------
Js创建对象
	三种方式：
	1.var obj = {};
	2.var obj1 = new Object();
	3.var obj2 = Object.create();
	1跟2的区别：
		推荐使用第一个方式
	第二种方式存在效率问题，因为要new对象，会涉及到原型查找的问题。
------------------------------------------------------------------------------------------------------------------------------------------------------
js对象和JSON的区别:
	JavaScript的对象代表类的实例,不可以跨平台传输数据,可以表现为键值对的形式,键不加引号,值可以是函数、对象、字符串、数字、布尔值等,可使用JSON.stringify(jsObj)转换成JSON对象。
	
	JSON仅JS下的一种数据格式，他从属于JS，并且在处理JSON数据时可直接使用JS内置API,可以跨平台来进行数据传输,速度快,表现为键值对形式,键必须加双引号,值不能是函数方法、Undefault/NaN,可使用JSON.parse(JSONStr)将JSON转换为js对象
------------------------------------------------------------------------------------------------------------------------------------------------------
jQuery和dom对象之间的相互转化：
	dom -> jQuery
	  dom对象：	         var btn = document.getElementById("..");
	  转为jQuery对象：   $(btn)  !!
	--------------------------------------------------------------
	jQuery -> dom
	  jQuery对象：       $("div")；
	  转为dom对象：      $("div")[0];   注意：此时不能用 .css()，因为dom对象没有css()方法
------------------------------------------------------------------------------------------------------------------------------------------------------
jQuery基本选择器的使用:
	标签选择器		$("标签名")        =====  $(div) <- document.getElementsByTag
	id选择器        $("#id")
	类选择器        $(".类名")
jQuery层级选择器：
	后代选择器      $("div p")
	子代选择器      $("#id1>p")
	下一个兄弟选择器     $("#id1+div") 
	之后所有兄弟选择器   $("#id1 ~ div")  选择#id1 之后的所有兄弟
	全部选择器		$("*")
jQuery基本过滤选择器：
	  :eq(index)        $("li:eq(3)")  拿到列表中下标为3的元素
	  :gt(index)        $("li:gt(3)")  拿到列表中下标大于3的所有元素
	  :lt(index)        $("li:lt(3)")  拿到列表中下标小于3的所有元素
	  :odd       		$("li:odd")   拿到列表中下标为奇数的所有元素
	  :even				$("li:even")    拿到列表中下标为偶数的所有元素
	  :first
	  :last


---------------------------------------------------------------------------------------
jQuery 属性选择器:
$("[属性]")
	$("[href]")       选取所有带有 href 属性的元素。
	$("[href!='#']")   选取所有 href 属性的值等于 "#" 的元素
	$("[href^='.jpg']")	所有 href 属性的值以 ".jpg" 开头的元素
	$("[href$='.jpg']")	所有 href 属性的值以 ".jpg" 结尾的元素
----------------------------------------------------------------------
jQuery CSS 选择器:
	读ccs属性：
		如: $("p").css("background-color");   ->   rgba（）
	
	写css属性：	
		如: $("p").css("background-color","red");
	注意：使用jQuery个元素属性赋值时，若读到对象为多个，则会遍历并分别赋值

	写css属性:
		$(对象).css("属性名",函数(index，value){...});
		index:当前元素的索引号
		value:
		当属性为函数时，该函数要有返回值，来分别为对象赋值不同的属性值，
		例:
		 从上到下给所有p标签的宽赋 20 + value++ px大小，
		 $("p").css("width", function () {
            return 20 + value++ + "px";
          })
		--------------------------------------------------------
	注：css({
		可以放键值对，当键值名非法时 如： font-size 可加引号，“font-size”
		“font-size”："100px"
	})		
		
---------------------------------------------------------------------------------------------------------------------
jQuery选择当前元素
	$(this)
------------------------------------------------------------------------------------------------------------------------
jQuery的hover()方法
	选择器.hover(fn)    -> 悬浮时触发一次fn方法，移开后再触发一次
	
----------------------------------------------------------------------------------------------------------------------------

























